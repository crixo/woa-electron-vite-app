This is my sqlite db schema

CREATE TABLE [anamnesi_prossima] (
	[ID_consulto]	integer,
	[ID_paziente]	integer,
	[prima_volta]	nvarchar(50) COLLATE NOCASE,
	[tipologia]	nvarchar(50) COLLATE NOCASE,
	[localizzazione]	nvarchar(50) COLLATE NOCASE,
	[irradiazione]	nvarchar(50) COLLATE NOCASE,
	[periodo_insorgenza]	nvarchar(50) COLLATE NOCASE,
	[durata]	nvarchar(50) COLLATE NOCASE,
	[familiarita]	nvarchar(50) COLLATE NOCASE,
	[altre_terapie]	nvarchar(50) COLLATE NOCASE,
	[varie]	nvarchar COLLATE NOCASE,
	PRIMARY KEY(ID_paziente, ID_consulto),
	FOREIGN KEY(ID_consulto) REFERENCES consulto(ID)
)

CREATE TABLE "anamnesi_remota" (
	`ID`	INTEGER PRIMARY KEY AUTOINCREMENT,
	`ID_paziente`	integer,
	`data`	datetime,
	`tipo`	integer,
	`descrizione`	nvarchar,
	FOREIGN KEY(tipo) REFERENCES lkp_anamnesi(ID),
	FOREIGN KEY(ID_paziente) REFERENCES paziente(ID)
)

CREATE TABLE "consulto" (
	`ID`	INTEGER PRIMARY KEY AUTOINCREMENT,
	`ID_paziente`	integer,
	`data`	datetime,
	`problema_iniziale`	nvarchar,
	FOREIGN KEY(ID_paziente) REFERENCES paziente(ID)
)

CREATE TABLE "esame" (
	`ID`	INTEGER PRIMARY KEY AUTOINCREMENT,
	`ID_consulto`	integer,
	`ID_paziente`	integer,
	`data`	datetime,
	`descrizione`	nvarchar,
	`tipo`	integer,
	FOREIGN KEY(tipo) REFERENCES lkp_esame(ID),
	FOREIGN KEY(ID_consulto) REFERENCES consulto(ID),
)

CREATE TABLE "lkp_anamnesi" (
	`ID`	INTEGER PRIMARY KEY AUTOINCREMENT,
	`descrizione`	nvarchar(50)
)

CREATE TABLE "lkp_esame" (
	`ID`	INTEGER PRIMARY KEY AUTOINCREMENT,
	`descrizione`	nvarchar(50)
)

CREATE TABLE [lkp_provincia] (
	[sigla]	nvarchar(2) COLLATE NOCASE,
	[descrizione]	nvarchar(50) COLLATE NOCASE

)

CREATE TABLE "paziente" (
	`ID`	INTEGER PRIMARY KEY AUTOINCREMENT,
	`cognome`	nvarchar(50),
	`nome`	nvarchar(50),
	`professione`	nvarchar(50),
	`indirizzo`	nvarchar(50),
	`citta`	nvarchar(50),
	`telefono`	nvarchar(50),
	`cellulare`	nvarchar(50),
	`prov`	nvarchar(2),
	`cap`	nvarchar(5),
	`email`	nvarchar(100),
	`data_nascita`	datetime
)

CREATE TABLE "trattamento" (
	`ID`	INTEGER PRIMARY KEY AUTOINCREMENT,
	`ID_consulto`	integer,
	`ID_paziente`	integer,
	`data`	datetime,
	`descrizione`	nvarchar,
	FOREIGN KEY(ID_consulto) REFERENCES consulto(ID)
)

CREATE TABLE "valutazione" (
	`ID`	INTEGER PRIMARY KEY AUTOINCREMENT,
	`ID_consulto`	integer,
	`ID_paziente`	integer,
	`strutturale`	nvarchar,
	`cranio_sacrale`	nvarchar,
	`ak_ortodontica`	nvarchar,
	FOREIGN KEY(ID_consulto) REFERENCES consulto(ID)
)

"You are an expert SQL query generator optimized for SQLite databases. Given a natural language question, generate an efficient, correct, and optimized SQL query. Ensure the query:

- Strictly adheres to SQLite syntax and constraints (e.g., no RIGHT JOIN, ensure usage of INTEGER PRIMARY KEY for auto-increment).

- Avoids unsupported functions like DATEDIFF or attempts to create custom functions. If date differences are required, use supported alternatives like JULIANDAY or date/time arithmetic (e.g., strftime('%s', end_date) - strftime('%s', start_date)).

- Uses indexes and avoids full-table scans where possible.

- Handles NULL values safely.

- Uses parameterized queries where needed to prevent SQL injection.

- If aggregation is required, use efficient grouping techniques (e.g., GROUP BY with indexed fields).

- Returns only the necessary columns and limits results when appropriate (e.g., LIMIT for performance optimization). "Your output should contain only the SQL statement, formatted clearly. If clarification is needed, provide brief comments within the query."

